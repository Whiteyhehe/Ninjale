-- Load the Orion Library from the new URL
local OrionLib = loadstring(game:HttpGet('https://raw.githubusercontent.com/shlexware/Orion/main/source'))()

-- Create the main window for the GUI
local Window = OrionLib:MakeWindow({
    Name = "Ninja Legends",
    HidePremium = true,
    SaveConfig = true,
    ConfigFolder = "NinjaLegends"
})

-- Create the 'Buy All' Tab
local BuyAllTab = Window:MakeTab({
    Name = "Buy All üí∏", -- Emoji for Buy All in the tab name
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Add a description label to the Buy All Tab
BuyAllTab:AddLabel("Buy all katanas and belts instantly.")

-- Add the 'Buy Katana' toggle
BuyAllTab:AddToggle({
    Name = "Buy Katana",
    Default = false,
    Callback = function(state)
        local args = {
            [1] = "buyAllSwords",
            [2] = "Blazing Vortex Island"
        }

        if state then
            -- Trigger buying all katanas when toggle is on
            game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(args))
        end
    end
})

-- Add the 'Buy Belts' toggle
BuyAllTab:AddToggle({
    Name = "Buy Belts",
    Default = false,
    Callback = function(state)
        local args = {
            [1] = "buyAllBelts",
            [2] = "Blazing Vortex Island"
        }

        if state then
            -- Trigger buying all belts when toggle is on
            game:GetService("Players").LocalPlayer.ninjaEvent:FireServer(unpack(args))
        end
    end
})

-- Create the 'Auto Evolve Pet' Tab
local AutoEvolveTab = Window:MakeTab({
    Name = "Auto Evolve Pet ü¶Ñ", -- Emoji for Auto Evolve Pet in the tab name
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Add a description label to the Auto Evolve Pet Tab
AutoEvolveTab:AddLabel("Evolve your pets automatically.")

-- Declare a variable to control the auto-evolve loop
local autoEvolveRunning = false

-- Add the toggle for Auto Evolve Pet
AutoEvolveTab:AddToggle({
    Name = "Auto Evolve Pets",
    Default = false,
    Callback = function(state)
        local args = {
            [1] = "autoEvolvePets"
        }

        if state then
            -- Activate Auto Evolve Pet when toggle is on (state = true)
            autoEvolveRunning = true
            while autoEvolveRunning do
                game:GetService("ReplicatedStorage").rEvents.autoEvolveRemote:InvokeServer(unpack(args))
                wait(0.1) -- Adjust the delay as needed
            end
        else
            -- Stop Auto Evolve Pet when toggle is off (state = false)
            autoEvolveRunning = false
        end
    end
})

-- Create the 'Get Pet' Tab
local GetPetTab = Window:MakeTab({
    Name = "Get Pet üêæ", -- Emoji for Get Pet in the tab name
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Add a description label to the Get Pet Tab
GetPetTab:AddLabel("Get a pet from the pet shop.")

-- Add a textbox for the pet name input
GetPetTab:AddTextbox({
    Name = "Pet Name",
    Default = "", -- Default text is empty
    TextDisappear = true, -- Text disappears after input
    Callback = function(petName)
        -- Store the pet name entered by the user
        _G.petName = petName
    end
})

-- Add a toggle for getting the pet
GetPetTab:AddToggle({
    Name = "Get Pet",
    Default = false,
    Callback = function(state)
        -- Declare a variable to track the loop state
        local getPetRunning = false

        -- Check if the petName is valid (non-empty)
        if _G.petName and _G.petName ~= "" then
            -- Find the pet in the Pet Shop folder
            local pet = game:GetService("ReplicatedStorage").cPetShopFolder:FindFirstChild(_G.petName)

            if pet then
                -- Loop when toggle is on
                if state and not getPetRunning then
                    getPetRunning = true
                    while getPetRunning and state do
                        -- Trigger the action to get the pet using the specified pet name
                        local args = { pet }
                        game:GetService("ReplicatedStorage").cPetShopRemote:InvokeServer(unpack(args))
                        print("Getting pet: " .. _G.petName) -- Optional print for confirmation

                        wait(0.4) -- Wait 0.4 seconds before attempting again
                    end
                end
            else
                print("Pet not found!") -- If pet is not found in the folder
            end
        else
            print("Please enter a valid pet name.") -- If toggle is off or pet name is empty
        end

        -- Stop the loop when the toggle is off
        if not state then
            getPetRunning = false
        end
    end
})

-- Create the 'Islands' Tab
local IslandsTab = Window:MakeTab({
    Name = "Islands üèùÔ∏è", -- Emoji for Islands in the tab name
    Icon = "rbxassetid://4483345998", -- Icon for the tab
    PremiumOnly = false
})

-- Add a description label to the Islands Tab
IslandsTab:AddLabel("Teleport to different islands.")

-- Define a function to teleport to the specific island part
local function teleportToIsland(islandName)
    local islandPart = workspace.islandUnlockParts:FindFirstChild(islandName)

    -- Check if the island part exists
    if islandPart then
        local player = game.Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        
        -- Ensure the character has a HumanoidRootPart for teleportation
        if character and character:FindFirstChild("HumanoidRootPart") then
            -- Teleport the player to the island part's position and orientation
            character.HumanoidRootPart.CFrame = islandPart.CFrame
        else
            warn("HumanoidRootPart not found. Cannot teleport.")
        end
    else
        warn("Island part not found: " .. islandName)
    end
end

-- Create a dropdown for the islands and teleport functionality
IslandsTab:AddDropdown({
    Name = "Select Island",
    Default = "Select an Island", -- Default text
    Options = {
        "Chaos Legends Island", "Astral Island", "Ancient Inferno Island", 
        "Blazing Vortex Island", "Cybernetic Legends Island", "Dark Elements Island", 
        "Dragon Legend Island", "Enchanted Island", "Eternal Island", 
        "Golden Master Island", "Inner Peace Island", "Midnight Shadow Island", 
        "Mystical Island", "Mythical Souls Island", "Sandstorm", "Skystorm Ultraus Island", 
        "Soul Fusion Island", "Space Island", "Thunderstorm", "Tundra Island", 
        "Winter Wonder Island"
    }, -- All your island names
    Callback = function(islandName)
        -- Call the teleport function to teleport to the selected island
        teleportToIsland(islandName)
    end
})

local selectedEgg = "Blue Crystal"
getgenv().autoGoodKarma = false
getgenv().autoBadKarma = false
getgenv().autoSwing = false
getgenv().autoSell = false
getgenv().autoBuySwords = false

-- Farming Tab
local FarmingTab = Window:MakeTab({
    Name = "Farming",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

FarmingTab:AddToggle({
    Name = "Auto Good Karma",
    Default = false,
    Callback = function(state)
        getgenv().autoGoodKarma = state
        while getgenv().autoGoodKarma do
            game:GetService("ReplicatedStorage").GivePlayerKarma:FireServer("GoodKarma", 1)
            wait(1)
        end
    end
})

FarmingTab:AddToggle({
    Name = "Auto Bad Karma",
    Default = false,
    Callback = function(state)
        getgenv().autoBadKarma = state
        while getgenv().autoBadKarma do
            game:GetService("ReplicatedStorage").GivePlayerKarma:FireServer("BadKarma", 1)
            wait(1)
        end
    end
})

FarmingTab:AddToggle({
    Name = "Auto Swing",
    Default = false,
    Callback = function(state)
        getgenv().autoSwing = state
        while getgenv().autoSwing do
            game:GetService("Players").LocalPlayer.ninjaEvent:FireServer("swingKatana")
            wait(0.1)
        end
    end
})

FarmingTab:AddToggle({
    Name = "Auto Sell",
    Default = false,
    Callback = function(state)
        getgenv().autoSell = state
        while getgenv().autoSell do
            local sellArea = game:GetService("Workspace").sellAreaCircles["sellAreaCircle5"]
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = sellArea.CFrame
            wait(5)
        end
    end
})

-- Auto Buy Tab
local AutoBuyTab = Window:MakeTab({
    Name = "Auto Buy",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

AutoBuyTab:AddToggle({
    Name = "Auto Buy Swords",
    Default = false,
    Callback = function(state)
        getgenv().autoBuySwords = state
        while getgenv().autoBuySwords do
            game:GetService("Players").LocalPlayer.ninjaEvent:FireServer("buyAllSwords", "Inner Peace")
            wait(1)
        end
    end
})

-- Misc Tab
local MiscTab = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

MiscTab:AddDropdown({
    Name = "Select Egg",
    Default = "Blue Crystal",
    Options = {
        "Blue Crystal",
        "Purple Crystal",
        "Orange Crystal",
        "Enchanted Crystal",
        "Astral Crystal",
        "Golden Crystal"
    },
    Callback = function(value)
        selectedEgg = value
    end
})

MiscTab:AddButton({
    Name = "Unlock All Islands",
    Callback = function()
        for _, v in pairs(game:GetService("Workspace").islandUnlockParts:GetChildren()) do
            game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = v.CFrame
            wait(0.2)
        end
    end
})

-- Teleports Tab
local TeleportsTab = Window:MakeTab({
    Name = "Teleports",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

TeleportsTab:AddButton({
    Name = "Teleport to Shop",
    Callback = function()
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").shopAreaCircles["shopAreaCircle"].CFrame
    end
})

TeleportsTab:AddButton({
    Name = "Teleport to KOTH",
    Callback = function()
        game:GetService("Players").LocalPlayer.Character.HumanoidRootPart.CFrame = game:GetService("Workspace").kothAreaPart.CFrame
    end
})

-- Finally, load the Orion GUI.
OrionLib:Init()
